<template >
<div>
  <el-dialog :title="title" :visible.sync="dialogFormVisible">
    <el-form :model="ruleForm" :rules="rules" class="demo-ruleForm" ref="ruleForm" label-width="100px">
      <el-form-item v-if="sign == 'FANDIAN'" :label="label" prop="num">
        <el-input type="number" v-model="ruleForm.num"></el-input>
      </el-form-item>
      <el-form-item v-else :label="label" prop="desc">
        <el-input type="textarea" v-model="ruleForm.desc"></el-input>
      </el-form-item>
    </el-form>
    <div slot="footer" class="dialog-footer">
      <el-button @click="dialogFormVisible = false">关 闭</el-button>
      <el-button type="primary" @click="submitForm('ruleForm')">保 存</el-button>
    </div>
  </el-dialog>
</div>
</template>

<script>
import {
  pass,
  backO,
  guaqiSearch,
  operateInvoice,
  confirmback
} from '../api/api'
import bus from '../bus'
export default {
  props: {
    row: {
      type: Object,
      default: null
    },
    sign: {
      type: String,
      default: null
    },
    Id: {
      type: String,
      default: null
    },
    title: {
      type: String,
      default: '驳回'
    },
    item: {
      type: Object,
      default: null
    },
    label: {
      type: String,
      default: '原因'
    }
  },
  data() {
    return {
      dialogFormVisible: true,
      ruleForm: {
        desc: '',
        num: ''
      },
      rules: {
        desc: [{
          required: true,
          message: '请填写驳回原因',
          trigger: 'blur'
        }]
      }
    }
  },
  created() {
    if (this.sign === 'FANDIAN') {
      // console.log(this.row.RewardsMoney)
      this.ruleForm.num = this.row.RewardsMoney
    }
  },
  methods: {
    submitForm(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          switch (this.sign) {
            case 'AGENT':
              pass(this.row).then(() => {
                this.dialogFormVisible = false
              }) // 代理商审核通过和驳回是一个接口 传递参数不同
              break
            case 'REVIEW':
              this.item.BackReason = this.ruleForm.desc
              backO(this.item).then(() => {
                this.dialogFormVisible = false
              }) // 订单审核
              break
            case 'GUAQI':
              this.item.Description = this.ruleForm.desc
              guaqiSearch(this.item).then((res) => {
                if (res.status) {
                  this.$message({
                    type: 'success',
                    message: '挂起成功!'
                  })
                  bus.$emit('gq-success')
                  this.dialogFormVisible = false
                }
              }) // 订单查询挂载
              break
            case 'INVOICE':
              var invoiceId = this.Id
              this.item.AuditMsg = this.ruleForm.desc
              operateInvoice(invoiceId, this.item).then(() => {
                this.dialogFormVisible = false
              })
              break
            case 'FANDIAN':
              this.row.RewardsMoney = this.ruleForm.num
              this.$confirm('您确定要返点吗?', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消',
                type: 'warning'
              }).then(() => {
                confirmback(this.row).then(res => {
                  if (res.status) {
                    this.$message({
                      type: 'success',
                      message: '返点成功!'
                    })
                    bus.$emit('fd-success')
                    // 成功够重新执行父组件的fdR()函数
                    this.dialogFormVisible = false
                  }
                })
              }).catch(() => {
                this.$message({
                  type: 'info',
                  message: '已取消'
                })
              })
              // default:
          }
        } else {
          return false
        }
      })
    }
  }
}
</script>

<style scoped>
</style>
